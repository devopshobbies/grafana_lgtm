apiVersion: monitoring.grafana.com/v1alpha1
kind: PodLogs
metadata:
  labels:
    instance: primary # This label must match the <<podLogSelector.matchLabels>> of your LogsInstance resource
  name: kubernetes-pods
  namespace: grafana-agent
spec:
  pipelineStages:
    - docker: {}
    - match: # This is an example to show you how pipeline stages work! such as adding labels to log lines as i did here, This stage is responsible to add http_method as well as http_status_code to log lines of all pods inside nginx namespace
        selector: '{namespace="nginx"}'
        stages: |
          - regex:
              expression: "(?P<method>GET|PUT|DELETE|POST)"
          - regex:
              expression: "(?P<status_code_with_http_version>HTTP.{6}\\d{3})"
          - regex:
              expression: "(?P<status_code>\\d{3})"
              source: "status_code_with_http_version"
          - labels:
              method:
              status_code:
  namespaceSelector:
    matchNames: # The logs of pods related to these namespaces will be collected by grafana agent
    - default
    - nginx
    - grafana
  selector:
    matchLabels: {}
